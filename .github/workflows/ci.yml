name: "CI"

permissions: "read-all"

on:
  push:
    branches:
      - "main"
  pull_request:

defaults:
  run:
    shell: "bash"

env:
  FORCE_COLOR: "1"

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12"]

    name: "Test (${{ matrix.python-version }})"
    runs-on: "ubuntu-latest"
    continue-on-error: false

    steps:
    - name: "Checkout repository"
      uses: "actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11"

    - name: "Setup Python"
      uses: "actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c"
      with:
        python-version: "${{ matrix.python-version }}"

    - name: "Run tests"
      run: |
        python -m pip install -r requirements/test.txt
        python -m pip install .
        pytest tests/
  test-build:
    name: "test-build"
    runs-on: "ubuntu-latest"
    outputs:
      hashes: ${{ steps.hash.outputs.hashes }}

    steps:
    - name: "Checkout repository"
      uses: "actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11"

    - name: "Setup Python"
      uses: "actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c"
      with:
        python-version: "3.11" # Pin to 3.11 until we have a good solution for Py 3.12

    - name: "Install dependencies"
      run: |
        python -m pip install -r requirements/publish.txt

    - name: "Build dists"
      # Uses 'SOURCE_DATE_EPOCH' for build reproducibility.
      run: |
        SOURCE_DATE_EPOCH=$(git log -1 --pretty=%ct) \
        python -m build

    # Create hashes of all the built distributables.
    # This is the input for "subject" of the SLSA builder.
    - name: "Generate hashes"
      id: hash
      run: |
        cd dist && echo "hashes=$(sha256sum * | base64 -w0)" >> $GITHUB_OUTPUT
